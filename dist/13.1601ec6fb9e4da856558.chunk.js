webpackJsonp([13],{139:function(e,t,o){e.exports=o.p+"b26b7f1de822ee64bc4b201ee9f40c16.png"},142:function(e,t,o){var c,n;o(143),c=o(144),n=o(150),e.exports=c||{},e.exports.__esModule&&(e.exports=e.exports["default"]),n&&(("function"==typeof e.exports?e.exports.options:e.exports).template=n)},143:function(e,t){},144:function(e,t,o){"use strict";function c(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var n=o(145),i=c(n),a=o(16);t["default"]={components:{Row:a.Row,iCol:a.Col,Affix:a.Affix,Navigate:i["default"]},data:function(){return{list:[]}},ready:function(){var e=this,t=this.$children[0].$children[1].$el.childNodes[1].querySelectorAll(".example");t.forEach(function(t){var o=t.querySelector("header span").innerHTML;e.list.push(o)})}}},145:function(e,t,o){var c,n;o(146),c=o(147),n=o(149),e.exports=c||{},e.exports.__esModule&&(e.exports=e.exports["default"]),n&&(("function"==typeof e.exports?e.exports.options:e.exports).template=n)},146:function(e,t){},147:function(e,t,o){"use strict";function c(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var n=o(148),i=c(n);t["default"]={props:{},data:function(){return{navigate:i["default"]}},computed:{},methods:{}}},148:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o={guide:[{title:"介绍",path:"/docs/guide/introduce"},{title:"起步",path:"/docs/guide/start"},{title:"规范",path:"/docs/guide/standard"},{title:"更新日志",path:"/docs/guide/update"}],components:[{type:"Basic",list:[{title:"Layout 栅格",path:"/components/layout"},{title:"Button 按钮",path:"/components/button"},{title:"Icon 图标",path:"/components/icon"}]},{type:"Form",list:[{title:"Radio 单选框",path:"/components/radio"},{title:"Checkbox 多选框",path:"/components/checkbox"},{title:"Switch 开关",path:"/components/switch"},{title:"InputNumber 数字输入框",path:"/components/input-number"}]},{type:"View",list:[{title:"Alert 警告提示",path:"/components/alert"},{title:"Progress 进度条",path:"/components/progress"},{title:"Badge 徽标数",path:"/components/badge"},{title:"Collapse 折叠面板",path:"/components/collapse"},{title:"Timeline 时间轴",path:"/components/timeline"},{title:"Tag 标签",path:"/components/tag"}]},{type:"Navigation",list:[{title:"Page 分页",path:"/components/page"},{title:"Breadcrumb 面包屑",path:"/components/breadcrumb"},{title:"Steps 步骤条",path:"/components/steps"}]},{type:"Chart",list:[{title:"Circle 进度环",path:"/components/circle"}]},{type:"Other",list:[{title:"Affix 图钉",path:"/components/affix"},{title:"BackTop 返回顶部",path:"/components/back-top"},{title:"Spin 加载中",path:"/components/spin"}]}]};t["default"]=o},149:function(e,t){e.exports=' <div class=navigate> <ul> <li v-for="item in navigate.guide"> <a v-link="{path: item.path}">{{ item.title }}</a> </li> <li> <div>组件</div> <ul> <li v-for="item in navigate.components"> <p>{{ item.type }}</p> <ul> <li v-for="component in item.list"> <a v-link="{path: component.path}">{{ component.title }}</a> </li> </ul> </li> </ul> </li> </ul> </div> '},150:function(e,t,o){e.exports=" <div class=wrapper> <div class=wrapper-header> <div class=wrapper-header-logo> <a v-link=\"{path: '/'}\"> <img src="+o(139)+'> </a> </div> </div> <div class=wrapper-container> <row> <i-col span=4 class=wrapper-navigate> <navigate></navigate> </i-col> <i-col span=20> <div class="wrapper-content ivu-article"> <slot></slot> </div> </i-col> </row> </div> </div> <div class=footer> <div class=footer-main> <row> <i-col span=5> <h4>GitHub</h4> <ul> <li> <a href=https://github.com/iview/iview target=_blank>iView</a> </li> <li> <a href=https://github.com/icarusion/vue-vueRouter-webpack target=_blank>vue+webpack工程</a> </li> </ul> </i-col> <i-col span=5> <h4>社区</h4> <ul> <li> <a href=https://github.com/iview/iview/issues target=_blank>反馈建议</a> </li> <li> <a href=https://github.com/iview/iview/issues/new target=_blank>提交Bug</a> </li> </ul> </i-col> <i-col span=5> <h4>相关站点</h4> <ul> <li> <a href="https://www.talkingcoder.com/?from=iview" target=_blank>TalkingCoder</a> - 有逼格的程序员社区 </li> <li> <a href=https://www.talkingdata.com/ target=_blank>TalkingData</a> - 移动·数据·价值 </li> </ul> </i-col> <i-col span=5 offset=4> <div class=footer-aside> <div class=footer-logo> <img src='+o(139)+'> </div> <div class=footer-author> Author: <a href="https://www.talkingcoder.com/aresn?from=iview" target=_blank>Aresn</a> </div> </div> </i-col> </row> </div> </div> '},151:function(e,t,o){var c,n;o(152),c=o(153),n=o(164),e.exports=c||{},e.exports.__esModule&&(e.exports=e.exports["default"]),n&&(("function"==typeof e.exports?e.exports.options:e.exports).template=n)},152:function(e,t){},153:function(e,t,o){"use strict";function c(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var n=o(154),i=c(n),a=o(16),l=o(155),s=c(l);t["default"]={components:{Icon:a.Icon},props:{lang:{type:String,"default":"javascript"},bg:{type:Boolean,"default":!1}},data:function(){return{code:"",copied:!1}},computed:{language:function(){return"auto"==this.lang?"":this.lang}},compiled:function(){this.code=this.$els.code.innerHTML.replace(/\n/,""),this.$els.code.innerHTML=this.code,i["default"].highlightBlock(this.$els.code)},methods:{clip:function(){var e=this,t=this.code.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&"),o=new s["default"](".copy",{text:function(){return t}});o.on("success",function(t){t.clearSelection(),o.destroy(),e.copied=!0,setTimeout(function(){e.copied=!1},2e3)})}}}},164:function(e,t){e.exports=' <div _v-53d23a6d=""> <pre :class="{bg: bg}" _v-53d23a6d=""><code :class=language v-el:code="" _v-53d23a6d=""><slot _v-53d23a6d=""></slot></code></pre> <span class=copy @click=clip _v-53d23a6d=""> <icon type=clipboard size=18 v-show=!copied _v-53d23a6d=""></icon> <icon type=checkmark size=18 v-show=copied style=color:#5cb85c _v-53d23a6d=""></icon> </span> </div> '},166:function(e,t,o){var c,n;o(167),c=o(168),n=o(169),e.exports=c||{},e.exports.__esModule&&(e.exports=e.exports["default"]),n&&(("function"==typeof e.exports?e.exports.options:e.exports).template=n)},167:function(e,t){},168:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]={props:{title:String,h1:Boolean,h2:Boolean,h3:Boolean,h4:Boolean,h5:Boolean,h6:Boolean},computed:{title_link:function(){return this.title.replace(/\s/g,"_")}}}},169:function(e,t){e.exports=' <div class=anchor> <h1 v-if=h1 :id=title_link>{{ title }}</h1> <h2 v-if=h2 :id=title_link>{{ title }}</h2> <h3 v-if=h3 :id=title_link>{{ title }}</h3> <h4 v-if=h4 :id=title_link>{{ title }}</h4> <h5 v-if=h5 :id=title_link>{{ title }}</h5> <h6 v-if=h6 :id=title_link>{{ title }}</h6> <a :href="`#${title_link}`">#</a> </div> '},182:function(e,t,o){var c,n;o(183),c=o(184),n=o(185),e.exports=c||{},e.exports.__esModule&&(e.exports=e.exports["default"]),n&&(("function"==typeof e.exports?e.exports.options:e.exports).template=n)},183:function(e,t){},184:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var c=o(16);t["default"]={components:{Row:c.Row,iCol:c.Col,Icon:c.Icon},props:{title:{type:String,"default":""}},data:function(){return{showCode:!1,showMore:!0,demo_height:0,code_height:0,ready:!1}},computed:{codeHeight:function(){var e={};return this.ready&&(this.showCode?e.height=this.code_height+"px":e.height=this.demo_height+"px"),e}},ready:function(){var e=this;this.$nextTick(function(){var t=e.$children[0].$children[0].$el.clientHeight,o=e.$children[0].$children[1].$el.clientHeight+20;e.code_height=o,o<=t&&(e.showMore=!1),e.demo_height=t,e.ready=!0})}}},185:function(e,t){e.exports=' <row class=example :id=title> <i-col class=example-demo span=12> <div class=example-case> <slot name=demo></slot> </div> <header class=example-header> <span> {{ title }} <a :href="`#${title}`">#</a> </span> </header> <div class=example-desc> <slot name=desc></slot> </div> </i-col> <i-col class=example-code :style=codeHeight span=12> <slot name=code></slot> <div class=example-code-more v-if=showMore @click="showCode = !showCode"> <icon type=ios-arrow-down v-show=!showCode></icon> <icon type=ios-arrow-up v-show=showCode></icon> </div> </i-col> <div class=example-split></div> </row> '},220:function(e,t,o){var c,n;o(221),c=o(222),n=o(224),e.exports=c||{},e.exports.__esModule&&(e.exports=e.exports["default"]),n&&(("function"==typeof e.exports?e.exports.options:e.exports).template=n)},221:function(e,t){},222:function(e,t,o){"use strict";function c(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var n=o(142),i=c(n),a=o(151),l=c(a),s=o(182),d=c(s),p=o(223),r=c(p),h=o(166),v=c(h),f=o(16),u=f.Checkbox.Group;t["default"]={components:{iArticle:i["default"],iCode:l["default"],Demo:d["default"],Anchor:v["default"],Checkbox:f.Checkbox,CheckboxGroup:u,Icon:f.Icon,Button:f.Button},data:function(){return{code:r["default"],single:!1,social:["facebook","github"],fruit:["苹果"],disabledSingle:!0,disabledGroup:["苹果"],checked:!0,disabled:!1}},methods:{}}},223:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o={};o.single="\n<template>\n    <Checkbox :checked.sync=\"single\">Checkbox</Checkbox>\n</template>\n<script>\n    import { Checkbox } from 'iview';\n    export default {\n        components: { Checkbox },\n        data () {\n            single: false\n        }\n    }\n</script>\n",o.group='\n<template>\n    <Checkbox-group :model="social">\n        <Checkbox value="twitter">\n            <Icon type="social-twitter"></Icon>\n            <span>Twitter</span>\n        </Checkbox>\n        <Checkbox value="facebook">\n            <Icon type="social-facebook"></Icon>\n            <span>Facebook</span>\n        </Checkbox>\n        <Checkbox value="github">\n            <Icon type="social-github"></Icon>\n            <span>Github</span>\n        </Checkbox>\n        <Checkbox value="snapchat">\n            <Icon type="social-snapchat"></Icon>\n            <span>Snapchat</span>\n        </Checkbox>\n    </Checkbox-group>\n    <Checkbox-group :model="fruit">\n        <Checkbox value="香蕉"></Checkbox>\n        <Checkbox value="苹果"></Checkbox>\n        <Checkbox value="西瓜"></Checkbox>\n    </Checkbox-group>\n</template>\n<script>\n    import { Checkbox, Icon } from \'iview\';\n    const CheckboxGroup = Checkbox.Group;\n    export default {\n        components: { Checkbox, CheckboxGroup, Icon },\n        data () {\n            social: [\'facebook\', \'github\'],\n            fruit: [\'苹果\']\n        }\n    }\n</script>\n',o.disabled='\n<template>\n    <Checkbox :checked.sync="disabledSingle" disabled>Checkbox</Checkbox>\n    <Checkbox-group :model="disabledGroup">\n        <Checkbox value="香蕉" disabled></Checkbox>\n        <Checkbox value="苹果" disabled></Checkbox>\n        <Checkbox value="西瓜"></Checkbox>\n    </Checkbox-group>\n</template>\n<script>\n    import { Checkbox } from \'iview\';\n    const CheckboxGroup = Checkbox.Group;\n    export default {\n        components: { Checkbox, CheckboxGroup },\n        data () {\n            disabledSingle: true,\n            disabledGroup: [\'苹果\']\n        }\n    }\n</script>\n',o.communication='\n<template>\n    <Checkbox :checked.sync="checked" :disabled="disabled">\n        <span v-if="checked">选中</span>\n        <span v-else>取消</span>\n         - \n        <span v-if="!disabled">可用</span>\n        <span v-else>不可用</span>\n    </Checkbox>\n    <br>\n    <Button type="primary" @click="checked = !checked">\n        <span v-if="!checked">选中</span>\n        <span v-else>取消</span>\n    </Button>\n    <Button type="primary" @click="disabled = !disabled">\n        <span v-if="disabled">可用</span>\n        <span v-else>不可用</span>\n    </Button>\n</template>\n<script>\n    import { Checkbox, Button } from \'iview\';\n    export default {\n        components: { Checkbox, Button },\n        data () {\n            checked: true,\n            disabled: false\n        }\n    }\n</script>\n',t["default"]=o},224:function(e,t){e.exports=' <i-article _v-2f74853c=""> <article _v-2f74853c=""> <h1 _v-2f74853c="">Checkbox 多选框</h1> <anchor title=概述 h2="" _v-2f74853c=""></anchor> <p _v-2f74853c="">基本组件-多选框。主要用于一组可选项多项选择，或者单独用于标记切换某种状态。</p> <anchor title=代码示例 h2="" _v-2f74853c=""></anchor> <demo title=单独使用 _v-2f74853c=""> <div slot=demo _v-2f74853c=""> <checkbox :checked.sync=single _v-2f74853c="">Checkbox</checkbox> <p class=demo-data _v-2f74853c="">{{ single | json }}</p> </div> <div slot=desc _v-2f74853c=""> <p _v-2f74853c="">通过设置<code _v-2f74853c="">checked</code>来标记是否选择，因为组件内部是使用<code _v-2f74853c="">v-model</code>来绑定，所以需要将<code _v-2f74853c="">checked</code>设置<code _v-2f74853c="">.sync</code>实现数据的双向绑定，否则在改变状态时，使用者的数据并没有变化。</p> </div> <i-code lang=html slot=code _v-2f74853c="">{{ code.single }}</i-code> </demo> <demo title=组合使用 _v-2f74853c=""> <div slot=demo _v-2f74853c=""> <checkbox-group :model=social _v-2f74853c=""> <checkbox value=twitter _v-2f74853c=""> <icon type=social-twitter _v-2f74853c=""></icon> <span _v-2f74853c="">Twitter</span> </checkbox> <checkbox value=facebook _v-2f74853c=""> <icon type=social-facebook _v-2f74853c=""></icon> <span _v-2f74853c="">Facebook</span> </checkbox> <checkbox value=github _v-2f74853c=""> <icon type=social-github _v-2f74853c=""></icon> <span _v-2f74853c="">Github</span> </checkbox> <checkbox value=snapchat _v-2f74853c=""> <icon type=social-snapchat _v-2f74853c=""></icon> <span _v-2f74853c="">Snapchat</span> </checkbox> </checkbox-group> <p class=demo-data _v-2f74853c="">{{ social | json }}</p> <checkbox-group :model=fruit _v-2f74853c=""> <checkbox value=香蕉 _v-2f74853c=""></checkbox> <checkbox value=苹果 _v-2f74853c=""></checkbox> <checkbox value=西瓜 _v-2f74853c=""></checkbox> </checkbox-group> <p class=demo-data _v-2f74853c="">{{ fruit | json }}</p> </div> <div slot=desc _v-2f74853c=""> <p _v-2f74853c="">使用<code _v-2f74853c="">Checkbox-group</code>配合数组来生成组合。在组合使用时，<code _v-2f74853c="">Checkbox</code>不再根据<code _v-2f74853c="">checked</code>参数来判断状态，而是根据传入的数组和<code _v-2f74853c="">value</code>的值自动判断。每个 Checkbox 的内容可以自定义，如不填写则默认使用 value 的值。</p> </div> <i-code lang=html slot=code _v-2f74853c="">{{ code.group }}</i-code> </demo> <demo title=不可用 _v-2f74853c=""> <div slot=demo _v-2f74853c=""> <checkbox :checked.sync=disabledSingle disabled="" _v-2f74853c="">Checkbox</checkbox> <p class=demo-data _v-2f74853c="">{{ disabledSingle | json }}</p> <checkbox-group :model=disabledGroup _v-2f74853c=""> <checkbox value=香蕉 disabled="" _v-2f74853c=""></checkbox> <checkbox value=苹果 disabled="" _v-2f74853c=""></checkbox> <checkbox value=西瓜 _v-2f74853c=""></checkbox> </checkbox-group> <p class=demo-data _v-2f74853c="">{{ disabledGroup | json }}</p> </div> <div slot=desc _v-2f74853c=""> <p _v-2f74853c="">通过设置<code _v-2f74853c="">disabled</code>属性来禁用多选框。</p> </div> <i-code lang=html slot=code _v-2f74853c="">{{ code.disabled }}</i-code> </demo> <demo title=与其它组件通信 _v-2f74853c=""> <div slot=demo _v-2f74853c=""> <checkbox :checked.sync=checked :disabled=disabled _v-2f74853c=""> <span v-if=checked _v-2f74853c="">选中</span> <span v-else="" _v-2f74853c="">取消</span> - <span v-if=!disabled _v-2f74853c="">可用</span> <span v-else="" _v-2f74853c="">不可用</span> </checkbox> <br _v-2f74853c=""> <button type=primary @click="checked = !checked" _v-2f74853c=""> <span v-if=!checked _v-2f74853c="">选中</span> <span v-else="" _v-2f74853c="">取消</span> </button> <button type=primary @click="disabled = !disabled" _v-2f74853c=""> <span v-if=disabled _v-2f74853c="">可用</span> <span v-else="" _v-2f74853c="">不可用</span> </button> </div> <div slot=desc _v-2f74853c=""> <p _v-2f74853c="">与其它组件进行数据联动。</p> </div> <i-code lang=html slot=code _v-2f74853c="">{{ code.communication }}</i-code> </demo> <div class=api _v-2f74853c=""> <anchor title=API h2="" _v-2f74853c=""></anchor> <anchor title="Checkbox props" h3="" _v-2f74853c=""></anchor> <table _v-2f74853c=""> <thead _v-2f74853c=""> <tr _v-2f74853c=""> <th _v-2f74853c="">属性</th> <th _v-2f74853c="">说明</th> <th _v-2f74853c="">类型</th> <th _v-2f74853c="">默认值</th> </tr> </thead> <tbody _v-2f74853c=""> <tr _v-2f74853c=""> <td _v-2f74853c="">checked</td> <td _v-2f74853c="">只在单独使用时有效。绑定数据，需要使用<code _v-2f74853c="">.sync</code>双向绑定，否则改变状态时并不能改变使用者的数据</td> <td _v-2f74853c="">Boolean</td> <td _v-2f74853c="">false</td> </tr> <tr _v-2f74853c=""> <td _v-2f74853c="">value</td> <td _v-2f74853c="">只在组合使用时有效。指定当前选项的value值，组合会自动判断是否选中</td> <td _v-2f74853c="">String | Number | Boolean</td> <td _v-2f74853c="">-</td> </tr> <tr _v-2f74853c=""> <td _v-2f74853c="">disabled</td> <td _v-2f74853c="">是否禁用当前项</td> <td _v-2f74853c="">Boolean</td> <td _v-2f74853c="">false</td> </tr> </tbody> </table> <anchor title="Checkbox events" h3="" _v-2f74853c=""></anchor> <table _v-2f74853c=""> <thead _v-2f74853c=""> <tr _v-2f74853c=""> <th _v-2f74853c="">事件名</th> <th _v-2f74853c="">说明</th> <th _v-2f74853c="">返回值</th> </tr> </thead> <tbody _v-2f74853c=""> <tr _v-2f74853c=""> <td _v-2f74853c="">on-change</td> <td _v-2f74853c="">只在单独使用时有效。在选项状态发生改变时触发，通过修改外部的数据改变时不会触发</td> <td _v-2f74853c="">true | false</td> </tr> </tbody> </table> <anchor title="Checkbox.Group props" h3="" _v-2f74853c=""></anchor> <table _v-2f74853c=""> <thead _v-2f74853c=""> <tr _v-2f74853c=""> <th _v-2f74853c="">属性</th> <th _v-2f74853c="">说明</th> <th _v-2f74853c="">类型</th> <th _v-2f74853c="">默认值</th> </tr> </thead> <tbody _v-2f74853c=""> <tr _v-2f74853c=""> <td _v-2f74853c="">model</td> <td _v-2f74853c="">指定选中项目的集合</td> <td _v-2f74853c="">Array</td> <td _v-2f74853c="">[]</td> </tr> </tbody> </table> <anchor title="Checkbox.Group events" h3="" _v-2f74853c=""></anchor> <table _v-2f74853c=""> <thead _v-2f74853c=""> <tr _v-2f74853c=""> <th _v-2f74853c="">事件名</th> <th _v-2f74853c="">说明</th> <th _v-2f74853c="">返回值</th> </tr> </thead> <tbody _v-2f74853c=""> <tr _v-2f74853c=""> <td _v-2f74853c="">on-change</td> <td _v-2f74853c="">在选项状态发生改变时触发，返回已选中的数组。通过修改外部的数据改变时不会触发</td> <td _v-2f74853c="">[...]</td> </tr> </tbody> </table> </div> </article> </i-article> '}});