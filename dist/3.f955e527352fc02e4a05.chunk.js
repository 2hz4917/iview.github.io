webpackJsonp([3],{128:function(e,t,o){e.exports=o.p+"b26b7f1de822ee64bc4b201ee9f40c16.png"},131:function(e,t,o){var i,n;o(132),i=o(133),n=o(139),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports["default"]),n&&(("function"==typeof e.exports?e.exports.options:e.exports).template=n)},132:function(e,t){},133:function(e,t,o){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var n=o(134),a=i(n),l=o(16);t["default"]={components:{Row:l.Row,iCol:l.Col,Affix:l.Affix,Navigate:a["default"]},data:function(){return{list:[]}},ready:function(){var e=this,t=this.$children[0].$children[1].$el.childNodes[1].querySelectorAll(".example");t.forEach(function(t){var o=t.querySelector("header span").innerHTML;e.list.push(o)})}}},134:function(e,t,o){var i,n;o(135),i=o(136),n=o(138),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports["default"]),n&&(("function"==typeof e.exports?e.exports.options:e.exports).template=n)},135:function(e,t){},136:function(e,t,o){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var n=o(137),a=i(n);t["default"]={props:{},data:function(){return{navigate:a["default"]}},computed:{},methods:{}}},137:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o={guide:[{title:"介绍",path:"/docs/guide/introduce"},{title:"起步",path:"/docs/guide/start"},{title:"规范",path:"/docs/guide/standard"},{title:"更新日志",path:"/docs/guide/update"}],components:[{type:"Basic",list:[{title:"Layout 栅格",path:"/components/layout"},{title:"Button 按钮",path:"/components/button"},{title:"Icon 图标",path:"/components/icon"}]},{type:"Form",list:[{title:"Radio 单选框",path:"/components/radio"},{title:"Checkbox 多选框",path:"/components/checkbox"},{title:"Switch 开关",path:"/components/switch"},{title:"InputNumber 数字输入框",path:"/components/input-number"}]},{type:"View",list:[{title:"Progress 进度条",path:"/components/progress"},{title:"Badge 徽标数",path:"/components/badge"},{title:"Timeline 时间轴",path:"/components/timeline"},{title:"Tag 标签",path:"/components/tag"}]},{type:"Navigation",list:[{title:"Page 分页",path:"/components/page"},{title:"Breadcrumb 面包屑",path:"/components/breadcrumb"},{title:"Steps 步骤条",path:"/components/steps"}]},{type:"Chart",list:[{title:"Circle 进度环",path:"/components/circle"}]},{type:"Other",list:[{title:"Affix 图钉",path:"/components/affix"},{title:"BackTop 返回顶部",path:"/components/back-top"},{title:"Spin 加载中",path:"/components/spin"}]}]};t["default"]=o},138:function(e,t){e.exports=' <div class=navigate> <ul> <li v-for="item in navigate.guide"> <a v-link="{path: item.path}">{{ item.title }}</a> </li> <li> <div>组件</div> <ul> <li v-for="item in navigate.components"> <p>{{ item.type }}</p> <ul> <li v-for="component in item.list"> <a v-link="{path: component.path}">{{ component.title }}</a> </li> </ul> </li> </ul> </li> </ul> </div> '},139:function(e,t,o){e.exports=" <div class=wrapper> <div class=wrapper-header> <div class=wrapper-header-logo> <a v-link=\"{path: '/'}\"> <img src="+o(128)+'> </a> </div> </div> <div class=wrapper-container> <row> <i-col span=4 class=wrapper-navigate> <navigate></navigate> </i-col> <i-col span=20> <div class="wrapper-content ivu-article"> <slot></slot> </div> </i-col> </row> </div> </div> <div class=footer> <div class=footer-main> <row> <i-col span=5> <h4>GitHub</h4> <ul> <li> <a href=https://github.com/iview/iview target=_blank>iView</a> </li> <li> <a href=https://github.com/icarusion/vue-vueRouter-webpack target=_blank>vue+webpack工程</a> </li> </ul> </i-col> <i-col span=5> <h4>社区</h4> <ul> <li> <a href=https://github.com/iview/iview/issues target=_blank>反馈建议</a> </li> <li> <a href=https://github.com/iview/iview/issues/new target=_blank>提交Bug</a> </li> </ul> </i-col> <i-col span=5> <h4>相关站点</h4> <ul> <li> <a href="https://www.talkingcoder.com/?from=iview" target=_blank>TalkingCoder</a> - 有逼格的程序员社区 </li> <li> <a href=https://www.talkingdata.com/ target=_blank>TalkingData</a> - 移动·数据·价值 </li> </ul> </i-col> <i-col span=5 offset=4> <div class=footer-aside> <div class=footer-logo> <img src='+o(128)+'> </div> <div class=footer-author> Author: <a href="https://www.talkingcoder.com/aresn?from=iview" target=_blank>Aresn</a> </div> </div> </i-col> </row> </div> </div> '},140:function(e,t,o){var i,n;o(141),i=o(142),n=o(153),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports["default"]),n&&(("function"==typeof e.exports?e.exports.options:e.exports).template=n)},141:function(e,t){},142:function(e,t,o){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var n=o(143),a=i(n),l=o(16),c=o(144),r=i(c);t["default"]={components:{Icon:l.Icon},props:{lang:{type:String,"default":"javascript"},bg:{type:Boolean,"default":!1}},data:function(){return{code:"",copied:!1}},computed:{language:function(){return"auto"==this.lang?"":this.lang}},compiled:function(){this.code=this.$els.code.innerHTML.replace(/\n/,""),this.$els.code.innerHTML=this.code,a["default"].highlightBlock(this.$els.code)},methods:{clip:function(){var e=this,t=this.code.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&"),o=new r["default"](".copy",{text:function(){return t}});o.on("success",function(t){t.clearSelection(),o.destroy(),e.copied=!0,setTimeout(function(){e.copied=!1},2e3)})}}}},153:function(e,t){e.exports=' <div _v-53d23a6d=""> <pre :class="{bg: bg}" _v-53d23a6d=""><code :class=language v-el:code="" _v-53d23a6d=""><slot _v-53d23a6d=""></slot></code></pre> <span class=copy @click=clip _v-53d23a6d=""> <icon type=clipboard size=18 v-show=!copied _v-53d23a6d=""></icon> <icon type=checkmark size=18 v-show=copied style=color:#5cb85c _v-53d23a6d=""></icon> </span> </div> '},154:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o={},i={},n={};o.install="\n$ npm install iview --save\n",o.demo='\n<template>\n    <Page :current="1" :total="100"></Page>\n</template>\n<script>\n    import { Page } from \'iview\';\n    export default {\n        components: { Page }\n    }\n</script>\n',o.css="\nimport 'iview/dist/styles/iview.css';\n",i.install="\n$ npm install iview --save\n",i.demo="\n<template>\n    <Row>\n        <i-col>\n            <Button size=\"large\" @click=\"clickBtn\">一个按钮</Button>\n        </i-col>\n    </Row>\n</template>\n<script>\n    import { Row, Col, Button } from 'iview';\n    \n    export default {\n        components: {\n            Row,\n            iCol: Col,\n            Button\n        },\n        methods: {\n            clickBtn () {\n                console.log('click!');\n            }\n        }\n    }\n</script>\n",i.warning="\nmodule: {\n    loaders: [\n        { test: /iview\\/.*?js$/, loader: 'babel' },\n        { test: /\\.js$/, loader: 'babel', exclude: /node_modules/ }\n    ]\n},\n",i.dev="\n// 如果是第一次使用，先运行init，以后直接运行dev\n$ npm run init\n$ npm run dev\n",i.prod="\n$ npm run build\n",n.prop='\n正确的使用方法：\n<Page :current="1" :total="100"></Page>\n\n错误的使用方法：\n<Page current="1" total="100"></Page>\n',t["default"]={introduce:o,start:i,standard:n}},155:function(e,t,o){var i,n;o(156),i=o(157),n=o(158),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports["default"]),n&&(("function"==typeof e.exports?e.exports.options:e.exports).template=n)},156:function(e,t){},157:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t["default"]={props:{title:String,h1:Boolean,h2:Boolean,h3:Boolean,h4:Boolean,h5:Boolean,h6:Boolean},computed:{title_link:function(){return this.title.replace(/\s/g,"_")}}}},158:function(e,t){e.exports=' <div class=anchor> <h1 v-if=h1 :id=title_link>{{ title }}</h1> <h2 v-if=h2 :id=title_link>{{ title }}</h2> <h3 v-if=h3 :id=title_link>{{ title }}</h3> <h4 v-if=h4 :id=title_link>{{ title }}</h4> <h5 v-if=h5 :id=title_link>{{ title }}</h5> <h6 v-if=h6 :id=title_link>{{ title }}</h6> <a :href="`#${title_link}`">#</a> </div> '},160:function(e,t,o){var i,n;i=o(161),n=o(162),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports["default"]),n&&(("function"==typeof e.exports?e.exports.options:e.exports).template=n)},161:function(e,t,o){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var n=o(131),a=i(n),l=o(140),c=i(l),r=o(154),p=i(r),s=o(155),d=i(s);t["default"]={components:{iArticle:a["default"],iCode:c["default"],Anchor:d["default"]},data:function(){return{code:p["default"]}},methods:{}}},162:function(e,t){e.exports=' <i-article> <article> <h1>起步</h1> <anchor title=使用之前 h2></anchor> <p>高效的开发，离不开基础工程的搭建。在开始使用iView之前，有必要先了解以下基础知识，我们也假设您已经写过Vue，并掌握了下面的内容。</p> <ul> <li> <a href=http://cn.vuejs.org/guide/components.html target=_blank>Vue组件</a> </li> <li> <a href=http://cn.vuejs.org/guide/application.html target=_blank>基于Vue构建大型应用</a> </li> </ul> <p>以下概念贯穿iView前后，建议开发者花点时间来了解。</p> <ul> <li> <code>props</code> 传递数据，以及<code>:prop</code> <code>:prop.sync</code> <code>:prop.once</code>的区别 </li> <li> <code>slot</code> 内容分发 </li> <li> <code>events</code> <code>$emit</code> <code>@click</code> 事件 </li> </ul> <anchor title=开发模式 h2></anchor> <p>在使用iView之前，我们已经为您准备好了基础工程和一些详细的教程，以此为基础开发，可以为您省去大量配置和调试环境的时间。</p> <p> 推荐工程：<a href=https://github.com/icarusion/vue-vueRouter-webpack target=_blank>vue-vueRouter-webpack</a> </p> <p>教程：</p> <ul> <li> <a href="https://www.talkingcoder.com/article/6310080842228107877?from=iview" target=_blank>《Vue+Webpack开发可复用的单页面富应用教程（配置篇）》</a> </li> <li> <a href="https://www.talkingcoder.com/article/6310724958473489215?from=iview" target=_blank>《Vue+Webpack开发可复用的单页面富应用教程（组件篇）》</a> </li> <li> <a href="https://www.talkingcoder.com/article/6310756346094488391?from=iview" target=_blank>《Vue+Webpack开发可复用的单页面富应用教程（技巧篇）》</a> </li> <li> <a href="https://www.talkingcoder.com/article/6309726065044556372?from=iview" target=_blank>《Vue+Webpack使用规范》</a> </li> </ul> <p>也可以使用<a href=https://github.com/vuejs/vue-cli target=_blank>vue-cli</a>或其他工程来构建。</p> <anchor title=安装 h2></anchor> <p>推荐使用 npm 来安装，享受生态圈和工具带来的便利，并遵循Commonjs规范进行模块化开发。当然，我们也推荐使用ES2015。</p> <i-code lang=bush bg>{{ code.start.install }}</i-code> <anchor title=使用组件 h2></anchor> <p>所有的组件都是按需加载的，使用<code>import</code>或者<code>require</code>的形式导入。如果你愿意，也可以在webpack的<code>vendors</code>里加载全部的iView组件。</p> <p>组件一般像这样使用：</p> <i-code lang=html bg>{{ code.start.demo }}</i-code> <p>需要注意的是，有些组件名称如果跟原生标签一样，建议在前面加前缀<code>i</code>，如<code>i-button</code>，并且<code>input</code>、<code>col</code>是必须加前缀的。</p> <anchor title=特别提醒 h2></anchor> <p>因为 iView 全部使用 ES2015 编写，需要借助 babel 来编译，所以使用者在配置 babel 时，需要支持 iView路径，以 webpack 为例：</p> <i-code bg>{{ code.start.warning }}</i-code> <anchor title=开发和部署 h2></anchor> <p>如果使用了推荐的工程构建，可以很轻松的配置开发、生产或者灰度等环境，并自动化完成所有任务。</p> <anchor title=开发调试 h3></anchor> <p>默认的访问地址是<a href=http://127.0.0.1:8080 target=_blank>http://127.0.0.1:8080</a>，可以在webpack配置。在Terminal执行下面方法，即可</p> <i-code lang=bush bg>{{ code.start.dev }}</i-code> <anchor title=生产部署 h3></anchor> <i-code lang=stata bg>{{ code.start.prod }}</i-code> <blockquote> <p>编译好的文件默认在dist目录内，如果需要可以在webpack配置CDN路径。</p> </blockquote> </article> </i-article> '}});