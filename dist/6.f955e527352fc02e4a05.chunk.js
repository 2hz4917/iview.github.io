webpackJsonp([6],{128:function(t,e,o){t.exports=o.p+"b26b7f1de822ee64bc4b201ee9f40c16.png"},131:function(t,e,o){var n,i;o(132),n=o(133),i=o(139),t.exports=n||{},t.exports.__esModule&&(t.exports=t.exports["default"]),i&&(("function"==typeof t.exports?t.exports.options:t.exports).template=i)},132:function(t,e){},133:function(t,e,o){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(e,"__esModule",{value:!0});var i=o(134),d=n(i),a=o(16);e["default"]={components:{Row:a.Row,iCol:a.Col,Affix:a.Affix,Navigate:d["default"]},data:function(){return{list:[]}},ready:function(){var t=this,e=this.$children[0].$children[1].$el.childNodes[1].querySelectorAll(".example");e.forEach(function(e){var o=e.querySelector("header span").innerHTML;t.list.push(o)})}}},134:function(t,e,o){var n,i;o(135),n=o(136),i=o(138),t.exports=n||{},t.exports.__esModule&&(t.exports=t.exports["default"]),i&&(("function"==typeof t.exports?t.exports.options:t.exports).template=i)},135:function(t,e){},136:function(t,e,o){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(e,"__esModule",{value:!0});var i=o(137),d=n(i);e["default"]={props:{},data:function(){return{navigate:d["default"]}},computed:{},methods:{}}},137:function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o={guide:[{title:"介绍",path:"/docs/guide/introduce"},{title:"起步",path:"/docs/guide/start"},{title:"规范",path:"/docs/guide/standard"},{title:"更新日志",path:"/docs/guide/update"}],components:[{type:"Basic",list:[{title:"Layout 栅格",path:"/components/layout"},{title:"Button 按钮",path:"/components/button"},{title:"Icon 图标",path:"/components/icon"}]},{type:"Form",list:[{title:"Radio 单选框",path:"/components/radio"},{title:"Checkbox 多选框",path:"/components/checkbox"},{title:"Switch 开关",path:"/components/switch"},{title:"InputNumber 数字输入框",path:"/components/input-number"}]},{type:"View",list:[{title:"Progress 进度条",path:"/components/progress"},{title:"Badge 徽标数",path:"/components/badge"},{title:"Timeline 时间轴",path:"/components/timeline"},{title:"Tag 标签",path:"/components/tag"}]},{type:"Navigation",list:[{title:"Page 分页",path:"/components/page"},{title:"Breadcrumb 面包屑",path:"/components/breadcrumb"},{title:"Steps 步骤条",path:"/components/steps"}]},{type:"Chart",list:[{title:"Circle 进度环",path:"/components/circle"}]},{type:"Other",list:[{title:"Affix 图钉",path:"/components/affix"},{title:"BackTop 返回顶部",path:"/components/back-top"},{title:"Spin 加载中",path:"/components/spin"}]}]};e["default"]=o},138:function(t,e){t.exports=' <div class=navigate> <ul> <li v-for="item in navigate.guide"> <a v-link="{path: item.path}">{{ item.title }}</a> </li> <li> <div>组件</div> <ul> <li v-for="item in navigate.components"> <p>{{ item.type }}</p> <ul> <li v-for="component in item.list"> <a v-link="{path: component.path}">{{ component.title }}</a> </li> </ul> </li> </ul> </li> </ul> </div> '},139:function(t,e,o){t.exports=" <div class=wrapper> <div class=wrapper-header> <div class=wrapper-header-logo> <a v-link=\"{path: '/'}\"> <img src="+o(128)+'> </a> </div> </div> <div class=wrapper-container> <row> <i-col span=4 class=wrapper-navigate> <navigate></navigate> </i-col> <i-col span=20> <div class="wrapper-content ivu-article"> <slot></slot> </div> </i-col> </row> </div> </div> <div class=footer> <div class=footer-main> <row> <i-col span=5> <h4>GitHub</h4> <ul> <li> <a href=https://github.com/iview/iview target=_blank>iView</a> </li> <li> <a href=https://github.com/icarusion/vue-vueRouter-webpack target=_blank>vue+webpack工程</a> </li> </ul> </i-col> <i-col span=5> <h4>社区</h4> <ul> <li> <a href=https://github.com/iview/iview/issues target=_blank>反馈建议</a> </li> <li> <a href=https://github.com/iview/iview/issues/new target=_blank>提交Bug</a> </li> </ul> </i-col> <i-col span=5> <h4>相关站点</h4> <ul> <li> <a href="https://www.talkingcoder.com/?from=iview" target=_blank>TalkingCoder</a> - 有逼格的程序员社区 </li> <li> <a href=https://www.talkingdata.com/ target=_blank>TalkingData</a> - 移动·数据·价值 </li> </ul> </i-col> <i-col span=5 offset=4> <div class=footer-aside> <div class=footer-logo> <img src='+o(128)+'> </div> <div class=footer-author> Author: <a href="https://www.talkingcoder.com/aresn?from=iview" target=_blank>Aresn</a> </div> </div> </i-col> </row> </div> </div> '},140:function(t,e,o){var n,i;o(141),n=o(142),i=o(153),t.exports=n||{},t.exports.__esModule&&(t.exports=t.exports["default"]),i&&(("function"==typeof t.exports?t.exports.options:t.exports).template=i)},141:function(t,e){},142:function(t,e,o){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(e,"__esModule",{value:!0});var i=o(143),d=n(i),a=o(16),c=o(144),r=n(c);e["default"]={components:{Icon:a.Icon},props:{lang:{type:String,"default":"javascript"},bg:{type:Boolean,"default":!1}},data:function(){return{code:"",copied:!1}},computed:{language:function(){return"auto"==this.lang?"":this.lang}},compiled:function(){this.code=this.$els.code.innerHTML.replace(/\n/,""),this.$els.code.innerHTML=this.code,d["default"].highlightBlock(this.$els.code)},methods:{clip:function(){var t=this,e=this.code.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&"),o=new r["default"](".copy",{text:function(){return e}});o.on("success",function(e){e.clearSelection(),o.destroy(),t.copied=!0,setTimeout(function(){t.copied=!1},2e3)})}}}},153:function(t,e){t.exports=' <div _v-53d23a6d=""> <pre :class="{bg: bg}" _v-53d23a6d=""><code :class=language v-el:code="" _v-53d23a6d=""><slot _v-53d23a6d=""></slot></code></pre> <span class=copy @click=clip _v-53d23a6d=""> <icon type=clipboard size=18 v-show=!copied _v-53d23a6d=""></icon> <icon type=checkmark size=18 v-show=copied style=color:#5cb85c _v-53d23a6d=""></icon> </span> </div> '},155:function(t,e,o){var n,i;o(156),n=o(157),i=o(158),t.exports=n||{},t.exports.__esModule&&(t.exports=t.exports["default"]),i&&(("function"==typeof t.exports?t.exports.options:t.exports).template=i)},156:function(t,e){},157:function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]={props:{title:String,h1:Boolean,h2:Boolean,h3:Boolean,h4:Boolean,h5:Boolean,h6:Boolean},computed:{title_link:function(){return this.title.replace(/\s/g,"_")}}}},158:function(t,e){t.exports=' <div class=anchor> <h1 v-if=h1 :id=title_link>{{ title }}</h1> <h2 v-if=h2 :id=title_link>{{ title }}</h2> <h3 v-if=h3 :id=title_link>{{ title }}</h3> <h4 v-if=h4 :id=title_link>{{ title }}</h4> <h5 v-if=h5 :id=title_link>{{ title }}</h5> <h6 v-if=h6 :id=title_link>{{ title }}</h6> <a :href="`#${title_link}`">#</a> </div> '},169:function(t,e,o){var n,i;n=o(170),i=o(176),t.exports=n||{},t.exports.__esModule&&(t.exports=t.exports["default"]),i&&(("function"==typeof t.exports?t.exports.options:t.exports).template=i)},170:function(t,e,o){"use strict";function n(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(e,"__esModule",{value:!0});var i=o(131),d=n(i),a=o(140),c=n(a),r=o(171),l=n(r),p=o(175),s=n(p),u=o(155),h=n(u),m=o(16),g=m.Button.Group;e["default"]={components:{iArticle:d["default"],iCode:c["default"],Demo:l["default"],Anchor:h["default"],Button:m.Button,Icon:m.Icon,ButtonGroup:g},data:function(){return{code:s["default"],loading:!1,loading2:!1}},methods:{toLoading:function(){this.loading=!0},toLoading2:function(){this.loading2=!0}}}},171:function(t,e,o){var n,i;o(172),n=o(173),i=o(174),t.exports=n||{},t.exports.__esModule&&(t.exports=t.exports["default"]),i&&(("function"==typeof t.exports?t.exports.options:t.exports).template=i)},172:function(t,e){},173:function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=o(16);e["default"]={components:{Row:n.Row,iCol:n.Col,Icon:n.Icon},props:{title:{type:String,"default":""}},data:function(){return{showCode:!1,showMore:!0,demo_height:0,code_height:0,ready:!1}},computed:{codeHeight:function(){var t={};return this.ready&&(this.showCode?t.height=this.code_height+"px":t.height=this.demo_height+"px"),t}},ready:function(){var t=this;this.$nextTick(function(){var e=t.$children[0].$children[0].$el.clientHeight,o=t.$children[0].$children[1].$el.clientHeight+20;t.code_height=o,o<=e&&(t.showMore=!1),t.demo_height=e,t.ready=!0})}}},174:function(t,e){t.exports=' <row class=example :id=title> <i-col class=example-demo span=12> <div class=example-case> <slot name=demo></slot> </div> <header class=example-header> <span> {{ title }} <a :href="`#${title}`">#</a> </span> </header> <div class=example-desc> <slot name=desc></slot> </div> </i-col> <i-col class=example-code :style=codeHeight span=12> <slot name=code></slot> <div class=example-code-more v-if=showMore @click="showCode = !showCode"> <icon type=ios-arrow-down v-show=!showCode></icon> <icon type=ios-arrow-up v-show=showCode></icon> </div> </i-col> <div class=example-split></div> </row> '},175:function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o={};o.type='\n<template>\n    <Button>Default</Button>\n    <Button type="primary">Primary</Button>\n    <Button type="ghost">Ghost</Button>\n</template>\n<script>\n    import { Button } from \'iview\';\n    export default {\n        components: { Button }\n    }\n</script>\n',o.size='\n<template>\n    <Button type="primary" size="large">Large</Button>\n    <Button type="primary">Default</Button>\n    <Button type="primary" size="small">Small</Button>\n</template>\n<script>\n    import { Button } from \'iview\';\n    export default {\n        components: { Button }\n    }\n</script>\n',o.disabled='\n<template>\n    <Button>Default</Button>\n    <Button disabled>Default(Disabled)</Button>\n    <br>\n    <Button type="primary">Primary</Button>\n    <Button type="primary" disabled>Primary(Disabled)</Button>\n    <br>\n    <Button type="ghost">Ghost</Button>\n    <Button type="ghost" disabled>Ghost(Disabled)</Button>\n</template>\n<script>\n    import { Button } from \'iview\';\n    export default {\n        components: { Button }\n    }\n</script>\n',o.icon='\n<template>\n    <Button type="primary" shape="circle" icon="search"></Button>\n    <Button type="primary" icon="search">搜索</Button>\n    <br>\n    <Button type="ghost" shape="circle">\n        <Icon type="search"></Icon>\n    </Button>\n    <Button type="ghost" shape="circle">\n        <Icon type="search"></Icon>\n        搜索\n    </Button>\n</template>\n<script>\n    import { Button, Icon } from \'iview\';\n    export default {\n        components: { Button, Icon }\n    }\n</script>\n',o.loading='\n<template>\n    <Button type="primary" loading>Loading...</Button>\n    <Button type="primary" :loading="loading" @click="toLoading">\n        <span v-if="!loading">Click me!</span>\n        <span v-else>Loading...</span>\n    </Button>\n    <Button type="primary" :loading="loading2" icon="checkmark-round" @click="toLoading2">\n        <span v-if="!loading2">Click me!</span>\n        <span v-else>Loading...</span>\n    </Button>\n</template>\n<script>\n    import { Button } from \'iview\';\n    export default {\n        components: { Button }\n    }\n</script>\n',o.group='\n<template>\n    <h4>基本</h4>\n    <Button-group size="large">\n        <Button>取消</Button>\n        <Button type="primary">确定</Button>\n    </Button-group>\n    <Button-group>\n        <Button type="primary">L</Button>\n        <Button>M</Button>\n        <Button type="ghost">R</Button>\n    </Button-group>\n    <h4>配合图标</h4>\n    <Button-group>\n        <Button type="primary">\n            <Icon type="chevron-left"></Icon>\n            前进\n        </Button>\n        <Button type="primary">\n            后退\n            <Icon type="chevron-right"></Icon>\n        </Button>\n    </Button-group>\n    <Button-group>\n        <Button type="primary" icon="cloud"></Button>\n        <Button type="primary" icon="upload"></Button>\n    </Button-group>\n</template>\n<script>\n    import { Button } from \'iview\';\n    const ButtonGroup = Button.Group;\n    export default {\n        components: { Button, ButtonGroup }\n    }\n</script>\n',e["default"]=o},176:function(t,e){t.exports=' <i-article> <article> <h1>Button 按钮</h1> <p>基础组件，触发业务逻辑时使用。</p> <anchor title=代码示例 h2></anchor> <demo title=按钮类型> <div slot=demo> <button>Default</button> <button type=primary>Primary</button> <button type=ghost>Ghost</button> </div> <div slot=desc> <p>按钮有三种类型：默认按钮、主按钮、幽灵按钮。</p> <p>通过设置<code>type</code>为<code>primary</code>和<code>ghost</code>创建不同样式的按钮，不设置为默认样式。</p> </div> <i-code lang=html slot=code>{{ code.type }}</i-code> </demo> <demo title=按钮尺寸> <div slot=demo> <button type=primary size=large>Large</button> <button type=primary>Default</button> <button type=primary size=small>Small</button> </div> <div slot=desc> <p>按钮有三种尺寸：大、默认（中）、小</p> <p>通过设置<code>size</code>为<code>large</code>和<code>small</code>将按钮设置为大和小尺寸，不设置为默认（中）尺寸。</p> </div> <i-code lang=html slot=code>{{ code.size }}</i-code> </demo> <demo title=不可用状态> <div slot=demo> <button>Default</button> <button disabled=disabled>Default(Disabled)</button> <br> <button type=primary>Primary</button> <button type=primary disabled=disabled>Primary(Disabled)</button> <br> <button type=ghost>Ghost</button> <button type=ghost disabled=disabled>Ghost(Disabled)</button> </div> <div slot=desc> <p>通过添加<code>disabled</code>属性可将按钮设置为不可用状态。</p> </div> <i-code lang=html slot=code>{{ code.disabled }}</i-code> </demo> <demo title=图标按钮及按钮形状> <div slot=demo> <button type=primary shape=circle icon=search></button> <button type=primary icon=search>搜索</button> <br> <button type=ghost shape=circle> <icon type=search></icon> </button> <button type=ghost shape=circle> <icon type=search></icon> 搜索 </button> </div> <div slot=desc> <p>通过设置<code>icon</code>属性在<code>Button</code>内嵌入一个<code>Icon</code>，或者直接在<code>Button</code>内使用<code>Icon</code>组件。</p> <p>使用<code>Button</code>的<code>icon</code>属性，图标位置将在最左边，如果需要自定义位置，需使用<code>Icon</code>组件。</p> <p>通过设置<code>shape</code>属性为<code>circle</code>，可将按钮置为圆的形状。</p> </div> <i-code lang=html slot=code>{{ code.icon }}</i-code> </demo> <demo title=加载中状态> <div slot=demo> <button type=primary loading>Loading...</button> <button type=primary :loading=loading @click=toLoading> <span v-if=!loading>Click me!</span> <span v-else>Loading...</span> </button> <button type=primary :loading=loading2 icon=checkmark-round @click=toLoading2> <span v-if=!loading2>Click me!</span> <span v-else>Loading...</span> </button> </div> <div slot=desc> <p>通过添加<code>loading</code>属性可以让按钮处于加载中状态，后两个按钮在点击时进入加载状态。</p> </div> <i-code lang=html slot=code>{{ code.loading }}</i-code> </demo> <demo title=按钮组合> <div slot=demo> <h4>基本</h4> <button-group size=large> <button>取消</button> <button type=primary>确定</button> </button-group> <button-group> <button type=primary>L</button> <button>M</button> <button type=ghost>R</button> </button-group> <h4>配合图标</h4> <button-group> <button type=primary> <icon type=chevron-left></icon> 前进 </button> <button type=primary> 后退 <icon type=chevron-right></icon> </button> </button-group> <button-group> <button type=primary icon=cloud></button> <button type=primary icon=upload></button> </button-group> </div> <div slot=desc> <p>将多个<code>Button</code>放入<code>Button.Group</code>内，可实现按钮组合的效果。</p> <p>通过设置<code>size</code>为<code>large</code>和<code>small</code>属性给<code>Button.Group</code>，可将按钮组尺寸设置为大和小，不设置<code>size</code>，则为默认（中）尺寸。</p> </div> <i-code lang=html slot=code>{{ code.group }}</i-code> </demo> <div class=api> <anchor title=API h2></anchor> <anchor title="Button props" h3></anchor> <table> <thead> <tr> <th>属性</th> <th>说明</th> <th>类型</th> <th>默认值</th> </tr> </thead> <tbody> <tr> <td>type</td> <td>按钮类型，可选值为<code>primary</code>和<code>ghost</code>或者不设置</td> <td>String</td> <td>-</td> </tr> <tr> <td>size</td> <td>按钮大小，可选值为<code>large</code>和<code>small</code>或者不设置</td> <td>String</td> <td>-</td> </tr> <tr> <td>shape</td> <td>按钮形状，可选值为<code>circle</code>或者不设置</td> <td>String</td> <td>-</td> </tr> <tr> <td>htmlType</td> <td>设置<code>button</code>原生的<code>type</code>，可选值为<code>button</code>、<code>submit</code>、<code>reset</code></td> <td>String</td> <td>button</td> </tr> <tr> <td>disabled</td> <td>设置按钮为禁用状态</td> <td>Boolean</td> <td>false</td> </tr> <tr> <td>loading</td> <td>设置按钮为加载中状态</td> <td>Boolean</td> <td>false</td> </tr> <tr> <td>icon</td> <td>设置按钮的图标类型</td> <td>String</td> <td>-</td> </tr> </tbody> </table> <anchor title="Button.Group props" h3></anchor> <table> <thead> <tr> <th>属性</th> <th>说明</th> <th>类型</th> <th>默认值</th> </tr> </thead> <tbody> <tr> <td>size</td> <td>按钮组合大小，可选值为<code>large</code>和<code>small</code>或者不设置</td> <td>String</td> <td>-</td> </tr> </tbody> </table> </div> </article> </i-article> '}});